---
import '../styles/global.css';
import { AstroFont } from "astro-font";
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Cursor from '../components/Animations/Cursor.astro';
import { getCollection } from 'astro:content';

import { 
  DEFAULT_TITLE, 
  DEFAULT_DESCRIPTION, 
  DEFAULT_KEYWORDS, 
  DEFAULT_AUTHOR, 
  DEFAULT_OG_IMAGE, 
  DEFAULT_PREFETCH_URLS,
  DEFAULT_CSS_FILES,
  DEFAULT_JS_FILES,
  DEFAULT_LANG,
  FAVICON_ICO,
  FAVICON_32x32,
  FAVICON_16x16,
  APPLE_TOUCH_ICON,
  MANIFEST,
  ROBOTS_CONTENT,
  THEME_COLOR
} from '../const.ts';


type SiteSettings = {
  siteTitle: string;
  siteDescription: string;
  logoUrl: string;
  logoAlt: string;
  faviconUrl?: string;
  faviconAlt?: string;
  lang?: string;
};

const siteSettingsFallback: SiteSettings = {
  siteTitle: 'Pinpon Création',
  siteDescription: '',
  logoUrl: '/images/logo.png',
  logoAlt: 'Logo Pinpon Création',
  faviconUrl: '/images/favicon.svg',
  faviconAlt: 'Favicon Pinpon',
  lang: 'fr',
};

let siteSettings: SiteSettings = siteSettingsFallback;
try {
  const entries = await getCollection('SiteSettings');
  const data = entries[0]?.data;
  if (data) {
    siteSettings = {
      siteTitle: data.siteTitle ?? siteSettingsFallback.siteTitle,
      siteDescription: data.siteDescription ?? siteSettingsFallback.siteDescription,
      logoUrl: data.logoUrl ?? siteSettingsFallback.logoUrl,
      logoAlt: data.logoAlt ?? siteSettingsFallback.logoAlt,
      faviconUrl: data.faviconUrl ?? siteSettingsFallback.faviconUrl,
      faviconAlt: data.faviconAlt ?? siteSettingsFallback.faviconAlt,
      lang: data.lang ?? siteSettingsFallback.lang,
    };
  }
} catch (e) {
  siteSettings = siteSettingsFallback;
}


// Utilisation des valeurs SiteSettings par défaut si non fournies en props
const { url } = Astro.request;
const {
  title = siteSettings.siteTitle,
  description = siteSettings.siteDescription,
  keywords = DEFAULT_KEYWORDS,
  author = DEFAULT_AUTHOR,
  ogImage = DEFAULT_OG_IMAGE,
  lang = siteSettings.lang,
  robots = ROBOTS_CONTENT
} = Astro.props;
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <AstroFont
    config={[
      {
        name: "Inter",
        src: [
          {
            weight: 'normal',
            style: 'normal',
            path: '../src/fonts/Inter/Inter-VariableFont_opsz,wght.ttf',
          },
        ],
        preload: true,
        display: "swap",
        selector: "h1,h2,h3,h4,h5,h6,.btn, .heading",
        fallback: "sans-serif",
      },
      {
        name: "Roboto Mono",
        src: [
          {
            weight: 'bold',
            style: 'normal',
            path: '../src/fonts/Roboto_Mono/static/RobotoMono-Bold.ttf',
          },
          {
            weight: '500',
            style: 'normal',
            path: '../src/fonts/Roboto_Mono/static/RobotoMono-Medium.ttf',
          },
          {
            weight: 'normal',
            style: 'normal',
            path: '../src/fonts/Roboto_Mono/static/RobotoMono-Regular.ttf',
          },
          {
            weight: '600',
            style: 'normal',
            path: '../src/fonts/Roboto_Mono/static/RobotoMono-SemiBold.ttf',
          },
        ],
        preload: true,
        display: "swap",
        selector: "body, button",
        fallback: "sans-serif",
      },
    ]}
  />
    
    <!-- Title and Meta -->
    <title>{title}</title>
    <meta name="description" content={description}>
    <meta name="keywords" content={keywords}>
    <meta name="author" content={author}>
    
    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={ogImage} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={ogImage} />

    <!-- Favicon -->
    <link rel="icon" href={siteSettings.faviconUrl || FAVICON_ICO}>
    <link rel="apple-touch-icon" sizes="180x180" href={APPLE_TOUCH_ICON}>
    <link rel="icon" type="image/png" sizes="32x32" href={FAVICON_32x32}>
    <link rel="icon" type="image/png" sizes="16x16" href={FAVICON_16x16}>
    
    <!-- Accessibility and SEO -->
    <meta name="robots" content={robots}>
    <meta name="theme-color" content={THEME_COLOR}>

  </head>
 <body>
    <Cursor />
    <Header />
    <slot />
    <Footer />
  </body>
  <script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const qs = (selector) => document.querySelector(selector);
  const qsa = (selector) => document.querySelectorAll(selector);
  
  import('/src/scripts/ignition.js').then(mod => mod.initIgnition());
  import('/src/scripts/header-nav.js').then(mod => {
    if (mod && typeof mod.initHeaderAndNav === 'function') {
      mod.initHeaderAndNav();
    }
  }); // Handles header, nav, mobile menu, color
  import('/src/scripts/typewriter.js').then(mod => mod.initTypewriter());
  import('/src/scripts/portfolio-modal.js').then(mod => mod.initPortfolioModal());
  import('/src/scripts/contact-form.js').then(mod => mod.initContactForm());
  import('/src/scripts/scroll-animations.js').then(mod => mod.initScrollAnimations());
  import('/src/scripts/reviews-carousel.js').then(mod => mod.init3DReviewsCarousel());
  import('/src/scripts/value-card-glow.js').then(mod => mod.initValueCardGlow());
  import('/src/scripts/intervention-cta.js').then(mod => mod.initInterventionCTA());
});
  </script>
</html>