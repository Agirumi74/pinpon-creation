<!-- Pompier rappel animation -->
<div id="firefighter-ramp" aria-hidden="true">
    <svg id="firefighter-svg" width="80" height="100vh" viewBox="0 0 80 800" fill="none" xmlns="http://www.w3.org/2000/svg" style="height:100vh; width:80px;">
    <!-- Metal Ramp (bar) -->
    <rect x="36" y="0" width="8" height="800" rx="4" fill="url(#metal-bar)" stroke="#bbb" stroke-width="1.5"/>
    <defs>
        <linearGradient id="metal-bar" x1="36" y1="0" x2="44" y2="800" gradientUnits="userSpaceOnUse">
        <stop stop-color="#e0e0e0"/>
        <stop offset="0.5" stop-color="#b0b0b0"/>
        <stop offset="1" stop-color="#888"/>
        </linearGradient>
    </defs>
    <g id="firefighter-group">
        <!-- Ombre dynamique sous le pompier (animée par JS, plus douce) -->
        <ellipse id="ff-shadow" cx="40" cy="200" rx="20" ry="7" fill="#000" opacity="0.10" filter="blur(2px)"/>
        <!-- Pompier cartoon premium, proportions lisibles, tout de dos, aucun visage -->
        <g id="firefighter-body">
          <!-- Casque rouge stylisé, vue de dos -->
          <circle cx="40" cy="90" r="18" fill="#ff0000" stroke="#b81d38" stroke-width="2.2"/>
          <rect x="25" y="90" width="30" height="10" rx="5" fill="#ff0000"/>
          <!-- Visière arrière (noire, pas de visage) -->
          <ellipse cx="40" cy="105" rx="16" ry="6" fill="#0c0c0c"/>
          <!-- Veste rouge -->
          <rect x="22" y="110" width="36" height="60" rx="10" fill="#e60000"/>
          <!-- Bandes réfléchissantes -->
          <rect x="22" y="125" width="36" height="6" rx="3" fill="#ffe066"/>
          <rect x="22" y="155" width="36" height="6" rx="3" fill="#ffe066"/>
          <!-- Bras gauche -->
          <rect x="10" y="120" width="14" height="38" rx="6" fill="#e60000"/>
          <!-- Main gauche -->
          <circle cx="17" cy="158" r="7" fill="#f2c18d"/>
          <!-- Bras droit -->
          <rect x="56" y="120" width="14" height="38" rx="6" fill="#e60000"/>
          <!-- Main droite -->
          <circle cx="63" cy="158" r="7" fill="#f2c18d"/>
          <!-- Jambes -->
          <rect x="26" y="170" width="12" height="38" rx="5" fill="#000"/>
          <rect x="42" y="170" width="12" height="38" rx="5" fill="#000"/>
          <!-- Bottes -->
          <rect x="26" y="208" width="12" height="12" rx="4" fill="#333"/>
          <rect x="42" y="208" width="12" height="12" rx="4" fill="#333"/>
        </g>
        <!-- Gyro (clignotant, effet premium) -->
        <ellipse id="gyro" cx="40" cy="64" rx="7" ry="4" fill="#eaf6ff" stroke="#1da1f2" stroke-width="1.5"/>
        <ellipse id="gyro-light" cx="40" cy="64" rx="11" ry="7" fill="#1da1f2" opacity="0.18"/>
        <ellipse id="gyro-flash" cx="40" cy="64" rx="14" ry="8" fill="#1da1f2" opacity="0" filter="blur(6px)"/>
        </g>
    </g>
    </svg>
</div>

<style>
  /* --- FIREFIGHTER RAPPEL ANIMATION --- */
/* --- FIREFIGHTER RAMP --- */
#firefighter-ramp {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 120;
  width: 80px;
  height: 100vh;
  pointer-events: none;
  opacity: 1;
  filter: drop-shadow(0 8px 24px rgba(184,29,56,0.18));
  transition: opacity 0.4s, filter 0.4s;
}
@media (max-width: 700px) {
  #firefighter-ramp {
    right: 0;
    width: 48px;
    height: 100vh;
  }
}
#firefighter-svg {
  width: 80px;
  height: 100vh;
  display: block;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 1000;
  pointer-events: none;
}
#firefighter-bubble {
  filter: drop-shadow(0 4px 16px rgba(0,0,0,0.13));
  border: 2.5px solid #b81d38;
  font-family: 'Inter', 'Roboto Mono', sans-serif;
  font-size: 1.1rem;
  font-weight: 900;
  letter-spacing: -0.01em;
  line-height: 1.4;
  box-shadow: 0 8px 32px 0 rgba(0,0,0,0.18);
  animation: bubble-pop 0.5s cubic-bezier(.7,1.7,.7,1);
}

@keyframes bubble-pop {
  0% { opacity: 0; transform: scale(0.7) translateY(20px); }
  60% { opacity: 1; transform: scale(1.08) translateY(-6px); }
  100% { opacity: 1; transform: scale(1) translateY(0); }
}
#firefighter-group #gyro {
  filter: drop-shadow(0 0 8px #1da1f2);
  transition: filter 0.2s;
}
#firefighter-group.alarm #gyro {
  filter: drop-shadow(0 0 24px #1da1f2) brightness(1.5);
}
#firefighter-group #gyro-light {
  opacity: 0;
  transition: opacity 0.2s;
}
#firefighter-group.alarm #gyro-light {
  opacity: 1;
}
#firefighter-body {
  transition: transform 0.25s cubic-bezier(.7,1.7,.7,1);
}
#legs-group {
  transition: transform 0.25s cubic-bezier(.7,1.7,.7,1);
}
#firefighter-group #gyro {
  filter: drop-shadow(0 0 8px #1da1f2);
  transition: filter 0.2s;
}
#firefighter-group.alarm #gyro {
  filter: drop-shadow(0 0 24px #1da1f2) brightness(1.5);
}
#firefighter-group #gyro-light {
  opacity: 0;
  transition: opacity 0.2s;
}
#firefighter-group.alarm #gyro-light {
  opacity: 1;
}
#firefighter-group #arm-alarm {
  transform: rotate(-25deg) translate(-2px, -10px);
  transform-origin: 24px 41px;
  transition: transform 0.2s;
}
#firefighter-group #arm-down {
  opacity: 1;
  transition: opacity 0.2s;
}
#firefighter-group.alarm #arm-alarm {
  transform: rotate(-5deg) translate(-2px, -2px);
}
#firefighter-group.alarm #arm-down {
  opacity: 0.2;
}
</style>

<script is:inline>
const seeOnMobile = false; // Mets à true pour activer sur mobile
(function() {
  const isMobile = /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(navigator.userAgent);
  if (!seeOnMobile && isMobile) return;
  const ramp = document.getElementById('firefighter-ramp');
  if (!ramp) return;
  const group = ramp.querySelector('#firefighter-group');
  const body = group?.querySelector('#firefighter-body');
  let shadow = group?.querySelector('#ff-shadow');
  if (!group || !body) return;
  let bubble = document.getElementById('firefighter-bubble');
  if (!bubble) {
    bubble = document.createElement('div');
    bubble.id = 'firefighter-bubble';
    bubble.style.position = 'fixed';
    bubble.style.top = '90px';
    bubble.style.right = '100px';
    bubble.style.zIndex = '9999';
    bubble.style.maxWidth = '260px';
    bubble.style.background = 'rgba(255,255,255,0.92)';
    bubble.style.borderRadius = '1.2em';
    bubble.style.boxShadow = '0 8px 32px 0 rgba(0,0,0,0.18)';
    bubble.style.padding = '1.1em 1.5em 1.1em 1.3em';
    bubble.style.fontFamily = 'Inter, Roboto Mono, sans-serif';
    bubble.style.fontWeight = '900';
    bubble.style.fontSize = '1.1rem';
    bubble.style.color = '#b81d38';
    bubble.style.display = 'none';
    bubble.style.transition = 'opacity 0.4s cubic-bezier(.7,1.7,.7,1), filter 0.4s cubic-bezier(.7,1.7,.7,1)';
    bubble.style.pointerEvents = 'none';
    bubble.style.backdropFilter = 'blur(7px)';
    bubble.style.opacity = '0';
    document.body.appendChild(bubble);
  }
  const sectionBubbles = [
    { id: 'home', text: "🚒 Besoin d'une intervention web ? Pinpon arrive !" },
    { id: 'bio', text: "🧢 Double casquette, double efficacité !" },
    { id: 'about', text: "🚨 Protocole d'urgence digitale activé !" },
    { id: 'portfolio', text: "📁 Dossiers d'intervention : mission accomplie !" },
    { id: 'partners', text: "🤝 La confiance, c'est la base d'une bonne intervention." },
    { id: 'reviews', text: "⭐ Satisfaction client : priorité absolue !" },
    { id: 'contact', text: "🔔 Prêt à déclencher l'alarme ?" },
  ];
  const sections = sectionBubbles.map(s => document.getElementById(s.id)).filter(Boolean);
  function getCurrentSection(scrollY) {
    let current = sectionBubbles[0];
    for (let i = 0; i < sections.length; i++) {
      const rect = sections[i].getBoundingClientRect();
      const top = rect.top + window.scrollY;
      if (scrollY >= top - window.innerHeight/2) {
        current = sectionBubbles[i];
      }
    }
    return current;
  }
  let lastScrollY = window.scrollY;
  let lastTime = performance.now();
  let velocity = 0;
  let bubbleTimeout = null;
  function safeTransform(val) {
    return Math.abs(val) < 0.01 ? 0 : Number(val.toFixed(3));
  }
  function animate() {
    const scrollY = window.scrollY || window.pageYOffset;
    const docHeight = document.documentElement.scrollHeight - window.innerHeight;
    const progress = Math.min(1, Math.max(0, scrollY / docHeight));
    const rampHeight = 800 - 220;
    const y = progress * rampHeight;
    const now = performance.now();
    const dt = Math.max(16, now - lastTime);
    velocity = (scrollY - lastScrollY) / (dt/1000);
    lastScrollY = scrollY;
    lastTime = now;
    group.setAttribute('transform', `translate(0,${safeTransform(y)})`);
    // Ombre simplifiée : taille et opacité plus naturelles
    if (shadow) {
      const shadowY = 200 + y;
      shadow.setAttribute('cy', `${shadowY}`);
      shadow.setAttribute('cx', '40');
      let rx = 18 - Math.abs(velocity) * 0.012;
      let ry = 6 + Math.abs(velocity) * 0.01;
      rx = Math.max(10, safeTransform(rx));
      ry = Math.min(14, safeTransform(ry));
      shadow.setAttribute('rx', `${rx}`);
      shadow.setAttribute('ry', `${ry}`);
      shadow.setAttribute('opacity', `${0.13 + Math.min(0.12, Math.abs(velocity)/2000)}`);
    }
    if (Math.abs(velocity) > 400) {
      group.classList.add('alarm');
    } else {
      group.classList.remove('alarm');
    }
    if (Math.abs(velocity) < 10) {
      const current = getCurrentSection(scrollY);
      bubble.textContent = current.text;
      bubble.style.display = 'block';
      bubble.style.opacity = '1';
      bubble.style.filter = 'blur(0)';
      if (bubbleTimeout) clearTimeout(bubbleTimeout);
    } else {
      bubble.style.opacity = '0.25';
      bubble.style.filter = 'blur(3px)';
      if (bubbleTimeout) clearTimeout(bubbleTimeout);
      bubbleTimeout = setTimeout(() => { bubble.style.display = 'block'; }, 400);
    }
    requestAnimationFrame(animate);
  }
  animate();
})();
</script>